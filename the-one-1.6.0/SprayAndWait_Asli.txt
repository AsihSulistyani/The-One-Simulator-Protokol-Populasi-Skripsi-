#Scenario information#Scenario.name = Reality--NrofCopy = %%DecisionEngineRouter.nrofCopies%%--%%DecisionEngineRouter.decisionEngine%%--[ TTL = %%Group.msgTtl%% ]--Termination_Time-%%Report.warmup%%-%%Group.bufferSize%%Scenario.name = Haggle 3--Percobaan --NrofCopy = %%DecisionEngineRouter.nrofCopies%%--%%DecisionEngineRouter.decisionEngine%%--[ TTL = %%Group.msgTtl%% ]--Termination_Time-%%Report.warmup%%-%%Group.bufferSize%%Scenario.simulateConnections = falseScenario.updateInterval = 1 #Scenario.endTime = 16981816#Scenario.endTime = 987529Scenario.endTime = 274883#987529 Haggle Cam#274883 Haggle#16981816 Reality # "Bluetooth" interface for all nodesbtInterface.type = SimpleBroadcastInterfacebtInterface.transmitSpeed = 250kbtInterface.transmitRange = 10# Common settings for all groups#Group.router = ShortestPathMapBasedMovementGroup.router = DecisionEngineRouterDecisionEngineRouter.decisionEngine = community.SprayAndWaitKuDecisionEngineRouter.binaryMode = trueDecisionEngineRouter.nrofCopies = [4;5;40;45;48]Scenario.nrofHostGroups = 2## TTL 24 hours=1440, 1 week= 10080, 3 weeks= 30240Group.msgTtl = 720Group.nrofInterfaces = 1Group.interface1 = btInterfaceGroup.bufferSize = 10MGroup.movementModel = StationaryMovementGroup1.groupID = AGroup1.waitTime = 20, 30Group1.speed = 0.5, 1.5Group1.nodeLocation = 10, 10Group1.nrofHosts = 20Group2.groupID = BGroup2.waitTime = 20, 30Group2.speed = 0.5, 1.5Group2.nodeLocation = 10, 10Group2.nrofHosts = 21Events.nrof = 2Events1.class = ExternalEventsQueue#Events1.filePath = RealityConnectionTraceFinal.txt#Events1.filePath = Haggle4-Cam-Imote.csvEvents1.filePath = Haggle3-Infocom5.csv#Events1.filePath = sassy.csvEvents2.class = MessageEventGeneratorEvents2.interval = 290, 310Events2.size = 10k## range of message source/destination address Events2.hosts = 0, 40# 0, 35 Haggle Cam# 0,40 Haggle# 0,96 RealityEvents2.prefix = M## Movement model settingsMovementModel.rngSeed = 1MovementModel.worldSize = 150, 150MovementModel.warmup = 1000## Reports - all report names have to be valid report classes# how many reports to loadReport.nrofReports = 1Report.warmup = 0Report.reportDir = reports/Spray and wait/Haggle 3/10 M/TTL 720Report.report1 = MessageStatsReport## GUI settings# GUI underlay image settingsGUI.UnderlayImage.fileName = data/helsinki_underlay.png# Image offset in pixels (x, y)GUI.UnderlayImage.offset = 64, 20# Scaling factor for the imageGUI.UnderlayImage.scale = 4.75# Image rotation (radians)GUI.UnderlayImage.rotate = -0.015# how many events to show in the log panel (default = 30)GUI.EventLogPanel.nrofEvents = 100# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$